// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.springframework.roo.petclinic.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.roo.petclinic.domain.Pet;
import org.springframework.roo.petclinic.service.api.PetService;
import org.springframework.roo.petclinic.web.PetsItemJsonController;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect PetsItemJsonController_Roo_JSON {
    
    declare @type: PetsItemJsonController: @RestController;
    
    declare @type: PetsItemJsonController: @RequestMapping(value = "/pets/{pet}", name = "PetsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param petService
     */
    @Autowired
    public PetsItemJsonController.new(PetService petService) {
        this.petService = petService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Pet
     */
    @ModelAttribute
    public Pet PetsItemJsonController.getPet(@PathVariable("pet") Long id) {
        Pet pet = petService.findOne(id);
        if (pet == null) {
            throw new NotFoundException(String.format("Pet with identifier '%s' not found",id));
        }
        return pet;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pet
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> PetsItemJsonController.show(@ModelAttribute Pet pet) {
        return ResponseEntity.ok(pet);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pet
     * @return UriComponents
     */
    public static UriComponents PetsItemJsonController.showURI(Pet pet) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(PetsItemJsonController.class).show(pet))
            .buildAndExpand(pet.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedPet
     * @param pet
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> PetsItemJsonController.update(@ModelAttribute Pet storedPet, @Valid @RequestBody Pet pet, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        pet.setId(storedPet.getId());
        getPetService().save(pet);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pet
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> PetsItemJsonController.delete(@ModelAttribute Pet pet) {
        getPetService().delete(pet);
        return ResponseEntity.ok().build();
    }
    
}
