{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/pet-edit/pet-edit.component.css","./src/app/pet-edit/pet-edit.component.html","./src/app/pet-edit/pet-edit.component.ts","./src/app/pet-list/pet-list.component.css","./src/app/pet-list/pet-list.component.html","./src/app/pet-list/pet-list.component.ts","./src/app/shared/pet/pet.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<mat-toolbar color=\\\"primary\\\">\\n  <span>Welcome to {{title}}!</span>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Petclinic';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {PetService} from './shared/pet/pet.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {PetListComponent} from './pet-list/pet-list.component';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatSelectModule,\n    MatListModule,\n    MatToolbarModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {PetEditComponent} from './pet-edit/pet-edit.component';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\n\n// Define routes\nconst appRoutes: Routes = [\n    {path: '', redirectTo: '/pet-list', pathMatch: 'full'},\n    {\n        path: 'pet-list',\n        component: PetListComponent\n    },\n    {\n        path: 'pet-add',\n        component: PetEditComponent\n    },\n    {\n        path: 'pet-edit/:id',\n        component: PetEditComponent\n    }\n];\n\n// Include all the modules, declarations, etc.\n@NgModule({\n    declarations: [\n        AppComponent,\n        PetListComponent,\n        PetEditComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatCardModule,\n        MatInputModule,\n        MatSelectModule,\n        MatListModule,\n        MatToolbarModule,\n        FormsModule,\n        RouterModule.forRoot(appRoutes)\n    ],\n    providers: [PetService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pet-edit/pet-edit.component.css\n// module id = ./src/app/pet-edit/pet-edit.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <form #petForm=\\\"ngForm\\\" (ngSubmit)=\\\"save(petForm.value)\\\">\\n        <mat-card-header>\\n            <mat-card-title><h2>{{pet.name ? 'Edit' : 'Add'}} Pet</h2></mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <input type=\\\"hidden\\\" name=\\\"id\\\" [(ngModel)]=\\\"pet.id\\\" #id>\\n            <input type=\\\"hidden\\\" name=\\\"version\\\" [(ngModel)]=\\\"pet.version\\\" #version>\\n            <!-- Indicate the pet name -->\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"pet.name\\\"\\n                       required name=\\\"name\\\" #name>\\n            </mat-form-field>\\n            <!-- Indicate the pet weight -->\\n            <mat-form-field>\\n                <input matInput type=\\\"number\\\" placeholder=\\\"Weight\\\" [(ngModel)]=\\\"pet.weight\\\"\\n                       required name=\\\"weight\\\" #weight>\\n            </mat-form-field>\\n            <!-- Indicate the pet type -->\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Type\\\" required name=\\\"type\\\" [(ngModel)]=\\\"pet.type\\\" #type>\\n                    <mat-option *ngFor=\\\"let petType of petTypes\\\" [value]=\\\"petType\\\">\\n                        {{ petType }}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\"\\n                    [disabled]=\\\"!petForm.form.valid\\\">Save\\n            </button>\\n            <button mat-raised-button color=\\\"secondary\\\" (click)=\\\"remove(pet.id)\\\"\\n                    *ngIf=\\\"pet.id\\\" type=\\\"button\\\">Delete\\n            </button>\\n            <a mat-button routerLink=\\\"/pet-list\\\">Cancel</a>\\n        </mat-card-actions>\\n    </form>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pet-edit/pet-edit.component.html\n// module id = ./src/app/pet-edit/pet-edit.component.html\n// module chunks = main","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PetService} from '../shared/pet/pet.service';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n    selector: 'app-pet-edit',\n    templateUrl: './pet-edit.component.html',\n    styleUrls: ['./pet-edit.component.css']\n})\nexport class PetEditComponent implements OnInit {\n\n    pet: any = {};\n    petTypes: any = [];\n\n    sub: Subscription;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private petService: PetService) {\n    }\n\n    ngOnInit() {\n        this.sub = this.route.params.subscribe(params => {\n            const id = params['id'];\n            if (id) {\n                this.petService.get(id).subscribe((pet: any) => {\n                    if (pet) {\n                        this.pet = pet;\n                    } else {\n                        console.log(`Pet with id '${id}' not found, returning to list`);\n                        this.gotoList();\n                    }\n                });\n            }\n        });\n\n        // Fill the types select\n        this.fillTypes();\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    gotoList() {\n        this.router.navigate(['/pet-list']);\n    }\n\n    save(form: NgForm) {\n        this.petService.save(form).subscribe(result => {\n            this.gotoList();\n        }, error => console.error(error));\n    }\n\n    remove(href) {\n        this.petService.remove(href).subscribe(result => {\n            this.gotoList();\n        }, error => console.error(error));\n    }\n\n    fillTypes(){\n        this.petService.getTypes().subscribe(result => {\n            this.petTypes = result;\n        }, error => console.error(error));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pet-edit/pet-edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pet-list/pet-list.component.css\n// module id = ./src/app/pet-list/pet-list.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n  <mat-card-header>Pet List</mat-card-header>\\n  <mat-card-content>\\n    <mat-list>\\n      <mat-list-item *ngFor=\\\"let pet of pets\\\">\\n        <h3 mat-line>\\n          <a mat-button [routerLink]=\\\"['/pet-edit', pet.id]\\\">{{pet.name}}</a>\\n        </h3>\\n      </mat-list-item>\\n    </mat-list>\\n  </mat-card-content>\\n\\n  <button mat-fab color=\\\"primary\\\" [routerLink]=\\\"['/pet-add']\\\">Add</button>\\n\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pet-list/pet-list.component.html\n// module id = ./src/app/pet-list/pet-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { PetService } from '../shared/pet/pet.service';\n\n@Component({\n  selector: 'app-pet-list',\n  templateUrl: './pet-list.component.html',\n  styleUrls: ['./pet-list.component.css']\n})\nexport class PetListComponent implements OnInit {\n  pets: Array<any>;\n\n  constructor(private petService: PetService) { }\n\n  ngOnInit() {\n    this.petService.getAll().subscribe(data => {\n      this.pets = data;\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pet-list/pet-list.component.ts","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class PetService {\n\n    public PETS_URL = '/api/pets';\n\n    /**\n     * The default constructor\n     *\n     * @param {HttpClient} http\n     */\n    constructor(private http: HttpClient) {\n\n    }\n\n    /**\n     * Method to obtain all the registered pets\n     *\n     * @returns {Observable<any>}\n     */\n    getAll(): Observable<any> {\n        return this.http.get(this.PETS_URL);\n    }\n\n    /**\n     * Method to obtain an individual pet\n     *\n     * @param {string} id\n     * @returns {Observable<Object>}\n     */\n    get(id: string) {\n        return this.http.get(this.PETS_URL + '/' + id);\n    }\n\n    /**\n     * Method to add a new pet\n     *\n     * @param pet\n     * @returns {Observable<any>}\n     */\n    save(pet: any): Observable<any> {\n        let result: Observable<Object>;\n        if (pet.id != null && pet.version != null) {\n            result = this.http.put(this.PETS_URL + '/' + pet.id, pet);\n        } else {\n            result = this.http.post(this.PETS_URL, pet);\n        }\n        return result;\n    }\n\n    /**\n     * Method that removes the provided pet id\n     *\n     * @param {string} href\n     * @returns {Observable<Object>}\n     */\n    remove(id: string) {\n        return this.http.delete(this.PETS_URL + '/' + id);\n    }\n\n    /**\n     * Obtains all the existing pet types\n     *\n     * @returns {Observable<Object>}\n     */\n    getTypes(){\n        return this.http.get(this.PETS_URL + '/types');\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/pet/pet.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}