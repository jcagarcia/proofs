// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.repository;

import com.querydsl.core.types.Path;
import com.querydsl.jpa.JPQLQuery;
import com.springsource.petclinic.model.QVet;
import com.springsource.petclinic.model.Vet;
import com.springsource.petclinic.repository.VetRepositoryImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.jpa.repository.support.QueryDslRepositorySupportExt.AttributeMappingBuilder;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.transaction.annotation.Transactional;

privileged aspect VetRepositoryImpl_Roo_Jpa_Repository_Impl {
    
    declare @type: VetRepositoryImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.FIRST_NAME = "firstName";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.LAST_NAME = "lastName";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.ADDRESS = "address";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.CITY = "city";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.TELEPHONE = "telephone";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.HOME_PAGE = "homePage";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.EMAIL = "email";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.BIRTH_DAY = "birthDay";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.EMPLOYED_SINCE = "employedSince";
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    public static final String VetRepositoryImpl.SPECIALTY = "specialty";
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Vet> VetRepositoryImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        
        QVet vet = QVet.vet;
        
        JPQLQuery<Vet> query = from(vet);
        
        Path<?>[] paths = new Path<?>[] {vet.firstName,vet.lastName,vet.address,vet.city,vet.telephone,vet.homePage,vet.email,vet.birthDay,vet.employedSince,vet.specialty};        
        applyGlobalSearch(globalSearch, query, paths);
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(FIRST_NAME, vet.firstName)
			.map(LAST_NAME, vet.lastName)
			.map(ADDRESS, vet.address)
			.map(CITY, vet.city)
			.map(TELEPHONE, vet.telephone)
			.map(HOME_PAGE, vet.homePage)
			.map(EMAIL, vet.email)
			.map(BIRTH_DAY, vet.birthDay)
			.map(EMPLOYED_SINCE, vet.employedSince)
			.map(SPECIALTY, vet.specialty);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, vet);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Vet> VetRepositoryImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        
        QVet vet = QVet.vet;
        
        JPQLQuery<Vet> query = from(vet);
        
        Path<?>[] paths = new Path<?>[] {vet.firstName,vet.lastName,vet.address,vet.city,vet.telephone,vet.homePage,vet.email,vet.birthDay,vet.employedSince,vet.specialty};        
        applyGlobalSearch(globalSearch, query, paths);
        
        // Also, filter by the provided ids
        query.where(vet.id.in(ids));
        
        AttributeMappingBuilder mapping = buildMapper()
			.map(FIRST_NAME, vet.firstName)
			.map(LAST_NAME, vet.lastName)
			.map(ADDRESS, vet.address)
			.map(CITY, vet.city)
			.map(TELEPHONE, vet.telephone)
			.map(HOME_PAGE, vet.homePage)
			.map(EMAIL, vet.email)
			.map(BIRTH_DAY, vet.birthDay)
			.map(EMPLOYED_SINCE, vet.employedSince)
			.map(SPECIALTY, vet.specialty);
        
        applyPagination(pageable, query, mapping);
        applyOrderById(query);
        
        return loadPage(query, pageable, vet);
    }
    
}
