// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.petclinic.service.impl;

import com.springsource.petclinic.model.Owner;
import com.springsource.petclinic.model.Pet;
import com.springsource.petclinic.repository.PetRepository;
import com.springsource.petclinic.service.impl.PetServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PetServiceImpl_Roo_Service_Impl {
    
    declare @type: PetServiceImpl: @Service;
    
    declare @type: PetServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PetRepository PetServiceImpl.petRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param petRepository
     */
    @Autowired
    public PetServiceImpl.new(PetRepository petRepository) {
        setPetRepository(petRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return PetRepository
     */
    public PetRepository PetServiceImpl.getPetRepository() {
        return petRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param petRepository
     */
    public void PetServiceImpl.setPetRepository(PetRepository petRepository) {
        this.petRepository = petRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param pet
     */
    @Transactional
    public void PetServiceImpl.delete(Pet pet) {
        // Clear bidirectional many-to-one child relationship with Owner
        if (pet.getOwner() != null) {
            pet.getOwner().getPets().remove(pet);
        }
        
        getPetRepository().delete(pet);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Pet> PetServiceImpl.save(Iterable<Pet> entities) {
        return getPetRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void PetServiceImpl.delete(Iterable<Long> ids) {
        List<Pet> toDelete = getPetRepository().findAll(ids);
        getPetRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Pet
     */
    @Transactional
    public Pet PetServiceImpl.save(Pet entity) {
        return getPetRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Pet
     */
    public Pet PetServiceImpl.findOne(Long id) {
        return getPetRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Pet
     */
    public Pet PetServiceImpl.findOneForUpdate(Long id) {
        return getPetRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Pet> PetServiceImpl.findAll(Iterable<Long> ids) {
        return getPetRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Pet> PetServiceImpl.findAll() {
        return getPetRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long PetServiceImpl.count() {
        return getPetRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Pet> PetServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getPetRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Pet> PetServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getPetRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param owner
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Pet> PetServiceImpl.findByOwner(Owner owner, GlobalSearch globalSearch, Pageable pageable) {
        return getPetRepository().findByOwner(owner, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param owner
     * @return Long
     */
    public long PetServiceImpl.countByOwner(Owner owner) {
        return getPetRepository().countByOwner(owner);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Pet> PetServiceImpl.getEntityType() {
        return Pet.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> PetServiceImpl.getIdType() {
        return Long.class;
    }
    
}
