// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.springframework.roo.petclinic.domain;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.Arrays;
import java.util.Collections;
import org.junit.Test;
import org.springframework.roo.petclinic.domain.Owner;
import org.springframework.roo.petclinic.domain.OwnerTest;
import org.springframework.roo.petclinic.domain.Pet;
import org.springframework.roo.petclinic.domain.dod.OwnerFactory;
import org.springframework.roo.petclinic.domain.dod.PetFactory;

privileged aspect OwnerTest_Roo_JpaUnitTest {
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private OwnerFactory OwnerTest.ownerFactory = new OwnerFactory();
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PetFactory OwnerTest.petFactory = new PetFactory();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return OwnerFactory
     */
    public OwnerFactory OwnerTest.getOwnerFactory() {
        return ownerFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ownerFactory
     */
    public void OwnerTest.setOwnerFactory(OwnerFactory ownerFactory) {
        this.ownerFactory = ownerFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return PetFactory
     */
    public PetFactory OwnerTest.getPetFactory() {
        return petFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param petFactory
     */
    public void OwnerTest.setPetFactory(PetFactory petFactory) {
        this.petFactory = petFactory;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @throws Exception
     */
    @Test
    public void OwnerTest.addToPetsShouldAddThePetToThepetsRelationship() throws Exception {
        // Setup
        Owner owner = getOwnerFactory().create(0);
        Pet pet1 = getPetFactory().create(0);
        Pet pet2 = getPetFactory().create(1);
        
        // Exercise
        owner.addToPets(Arrays.asList(pet1, pet2));
        
        // Verify
        assertThat(owner.getPets()).as("Check 'addToPets' adds the pets to the relationship")
            .contains(pet1).contains(pet2);
        assertThat(owner).as("Check 'addToPets' updates the Pet relationship side")
            .isEqualTo(pet1.getOwner()).isEqualTo(pet2.getOwner());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @throws Exception
     */
    @Test
    public void OwnerTest.addToPetsShouldRemoveThePetFromThepetsRelationship() throws Exception {
        // Setup
        Owner owner = getOwnerFactory().create(0);
        Pet pet1 = getPetFactory().create(0);
        Pet pet2 = getPetFactory().create(1);
        owner.addToPets(Arrays.asList(pet1, pet2));
        
        // Exercise
        owner.removeFromPets(Collections.singleton(pet1));
        
        // Verify
        assertThat(pet1.getOwner()).as("Check 'removeFromPets' updates the Pet relationship side")
            .isNull();
        assertThat(owner.getPets()).as("Check 'removeFromPets' removes a Pet from the relationship")
            .doesNotContain(pet1).contains(pet2);
    }
    
}
